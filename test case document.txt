Igor Alyeksyeyenko, ia22016

G7. Create function to delete from list all elements with bigger value than previous element (before any element is deleted).
  1) implementing it through a linked list, using dynamic data structures,
  2) using STL::list.
  
Assumptions:
- Erasing elements from STL::list is allowed using the erase method as it is shown in class examples.
- program does not need to repeat, as mentioned in lecture
- no freeing up of any memory is needed in STL::list
- both versions(linked list and STL::list) files have their own main functions as they are separate programs
- task is understood as deleting ALL elements than previous, resulting in a descending order list
- values passed to the Node constructor are valid
- only arrays with specific sizes are passed
- NULL is treated as passing the value 0
- uninitialized arrays with specific sizes will have random values

linked list:
	1)
	user input: 4
	1 2 3 10
	printList:
		output: 1->2->3->10
	removeAllLargerThanPrevious:
		deleted nodes: 2,3,10
	printList:
		output: 1
	*************************************
	2)
	user input: 2
	1 NULL
	printList:
		output: 1->0
	removeAllLargerThanPrevious:
		deleted nodes: 
	printList:
		output: 1->0
	*************************************
	3)
	user input: 0
	output: program will ask for input again
	*************************************
	4)
	user input: 4
	-1 -2 -3 -10
	printList:
		output: -1->-2->-3->-10
	removeAllLargerThanPrevious:
		deleted nodes: 
	printList:
		output: -1->-2->-3->-10
	*************************************
	5)
	user input: 4
	4 7 3 4
	printList:
		output:4->7->3->4
	removeAllLargerThanPrevious:
		deleted nodes: 7,4(the last node)
	printList:
		output: 4->3
	
2)STL::list
	1)
	user input: 4
	1 2 3 10
	printList:
		output: 1->2->3->10
	removeAllLargerThanPrevious:
		elements removed from the list: 2,3,10
	printList:
		output: 1
	*************************************
	2)
	user input: 2
	1 NULL
	printList:
		output: 1->0
	removeAllLargerThanPrevious:
		no elements are removed
	printList:
		output: 1->0
	*************************************
	3)
	user input: 0
	output: program will ask for input again
	*************************************
	4)
	user input: 4
	-1 -2 -3 -10
	printList:
		output: -1->-2->-3->-10
	removeAllLargerThanPrevious:
		no elements are removed 
	printList:
		output: -1->-2->-3->-10
	*************************************
	5)
	user input: 4
	4 7 3 4
	printList:
		output:4->7->3->4
	removeAllLargerThanPrevious:
		elements removed from the list: 7,4(the last node)
	printList:
		output: 4->3